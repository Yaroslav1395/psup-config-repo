server:
  port: 9999
spring:
  application:
    name: GATEWAY-SERVICE
  cloud:
    gateway:
      discovery:
        locator:
          enabled: false
      routes:
        - id: product-service
          uri: ${PRODUCT_SERVICE_URL:http://localhost:8080}
          predicates:
            - Path=/api/v1/product-service/**
          filters:
            - name: CircuitBreaker
              args:
                name: productCircuitBreaker
                fallbackUri: forward:/fallback/product-service
                statusCodes:
                  - INTERNAL_SERVER_ERROR
                  - GATEWAY_TIMEOUT
                  - BAD_GATEWAY
        - id: manufacture-service
          uri: ${MANUFACTURE_SERVICE_URL:http://localhost:8081}
          predicates:
            - Path=/api/v1/manufacture-service/**
          filters:
            - name: CircuitBreaker
              args:
                name: manufactureCircuitBreaker
                fallbackUri: forward:/fallback/manufacture-service
                statusCodes:
                  - INTERNAL_SERVER_ERROR
                  - GATEWAY_TIMEOUT
                  - BAD_GATEWAY
        - id: storage-service
          uri: ${STORAGE_SERVICE_URL:http://localhost:8082}
          predicates:
            - Path=/api/v1/storage-service/**
          filters:
            - name: CircuitBreaker
              args:
                name: storageCircuitBreaker
                fallbackUri: forward:/fallback/storage-service
                statusCodes:
                  - INTERNAL_SERVER_ERROR
                  - GATEWAY_TIMEOUT
                  - BAD_GATEWAY
resilience4j:
  circuitbreaker:
    instances:
      productCircuitBreaker:
        sliding-window-type: COUNT_BASED
        sliding-window-size: 5
        failure-rate-threshold: 75
        minimum-number-of-calls: 5
        wait-duration-in-open-state: 5s
        automatic-transition-from-open-to-half-open-enabled: true
        permitted-number-of-calls-in-half-open-state: 2
        record-exceptions:
          - java.lang.RuntimeException
          - java.io.IOException
          - java.net.ConnectException
          - java.net.SocketTimeoutException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.HttpServerErrorException
      manufactureCircuitBreaker:
        sliding-window-type: COUNT_BASED
        sliding-window-size: 5
        failure-rate-threshold: 75
        minimum-number-of-calls: 5
        wait-duration-in-open-state: 5s
        automatic-transition-from-open-to-half-open-enabled: true
        permitted-number-of-calls-in-half-open-state: 2
        record-exceptions:
          - java.lang.RuntimeException
          - java.io.IOException
          - java.net.ConnectException
          - java.net.SocketTimeoutException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.HttpServerErrorException
      storageCircuitBreaker:
        sliding-window-type: COUNT_BASED
        sliding-window-size: 5
        failure-rate-threshold: 75
        minimum-number-of-calls: 5
        wait-duration-in-open-state: 5s
        automatic-transition-from-open-to-half-open-enabled: true
        permitted-number-of-calls-in-half-open-state: 2
        record-exceptions:
          - java.lang.RuntimeException
          - java.io.IOException
          - java.net.ConnectException
          - java.net.SocketTimeoutException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.HttpServerErrorException
  timelimiter:
    instances:
      productCircuitBreaker:
        timeout-duration: 2s
        cancel-running-future: true
      manufactureCircuitBreaker:
        timeout-duration: 2s
        cancel-running-future: true
      storageCircuitBreaker:
        timeout-duration: 2s
        cancel-running-future: true
eureka:
  client:
    enabled: false
management:
  endpoints:
    web:
      exposure:
        include: "*"
  tracing:
    enabled: false
    sampling:
      probability: 0.0
  endpoint:
    gateway:
      enabled: true
    health:
      show-details: always
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.cloud.gateway.route.RouteDefinitionLocator: DEBUG
    org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping: TRACE
    org.springframework.cloud.loadbalancer: DEBUG
    reactor.netty.http.client: DEBUG