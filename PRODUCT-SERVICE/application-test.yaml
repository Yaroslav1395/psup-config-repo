server:
  port: 8080
spring:
  application:
    name: PRODUCT-SERVICE
  r2dbc:
    url: ${SPRING_R2DBC_URL:r2dbc:postgresql://localhost:5432/product_db}
    username: admin
    password: admin
  liquibase:
    enabled: true
    change-log: classpath:/db/main-changelog.xml
    default-schema: public
    url: ${SPRING_LIQUIBASE_URL:jdbc:postgresql://localhost:5432/product_db}
    user: admin
    password: admin
  cloud:
    discovery:
      enabled: true
  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_BROKERS:localhost:9094,localhost:9095,localhost:9096}
      group-id: product-service
      auto-offset-reset: latest
      properties:
        spring.json.trusted.packages: sakhno.psup.product_service.events.consumer
        spring.json.type.mapping: >
          productTestEvent:sakhno.psup.product_service.events.consumer.ProductTestEvent
    producer:
      bootstrap-servers: ${KAFKA_BROKERS:localhost:9094,localhost:9095,localhost:9096}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      properties:
        delivery-timeout-ms: ${KAFKA_DELIVERY_TIMEOUT_MS:20000}
        linger-ms: ${KAFKA_LINGER_MS:0}
        request.timeout.ms: ${KAFKA_REQUEST_TIMEOUT_MS:10000}
        enable.idempotence: true
        max.in.flight.requests.per.connection: ${KAFKA_MAX_IN_FLIGHT_REQUESTS_PER_CONNECTION:5}
        spring.json.trusted.packages: sakhno.psup.storage_service.events.producer
        spring.json.type.mapping: >
          manufactureTestEvent:sakhno.psup.product_service.events.producer.ManufactureTestEvent
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_URL:http://localhost:8761/eureka}
    registry-fetch-interval-seconds: 10
    initial-instance-info-replication-interval-seconds: 5
  instance:
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30
resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-type: COUNT_BASED
        sliding-window-size: 5
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 1s
        permitted-number-of-calls-in-half-open-state: 2
        automatic-transition-from-open-to-half-open-enabled: true
        record-exceptions:
          - java.io.IOException
          - java.net.ConnectException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.reactive.function.client.WebClientRequestException
          - org.springframework.web.client.HttpServerErrorException
          - org.springframework.web.reactive.function.client.WebClientResponseException.InternalServerError
          - org.springframework.web.reactive.function.client.WebClientResponseException.ServiceUnavailable
        ignore-exceptions:
          - org.springframework.web.reactive.function.client.WebClientResponseException.BadRequest
          - org.springframework.web.reactive.function.client.WebClientResponseException.NotFound
          - org.springframework.web.reactive.function.client.WebClientResponseException.Unauthorized
          - org.springframework.web.reactive.function.client.WebClientResponseException.Forbidden
  retry:
    configs:
      default:
        max-attempts: 3
        wait-duration: 1s
        retry-exceptions:
          - java.util.concurrent.TimeoutException
  timelimiter:
    configs:
      default:
        timeout-duration: 2s
        cancel-running-future: true
management:
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_URL:http://localhost:9411/api/v2/spans}
  endpoints:
    web:
      exposure:
        include: '*'
  tracing:
    enabled: true
    sampling:
      probability: 1.0
logging:
  pattern:
    level: "%5p [${spring.application.name}, trace=%X{traceId:-}, span=%X{spanId:-}]"
  level:
    org.springframework.data.r2dbc: DEBUG
    io.github.resilience4j: DEBUG
    reactor.retry: DEBUG
    org.springframework.cloud.circuitbreaker: DEBUG
log:
  path: ${user.home}/Universal_Trade_Platform/logs/product-service
manufacture:
  service:
    base:
      url: ${MANUFACTURE_SERVICE_BASE_URL:http://localhost:8081}